name: Action
on: [push]
env:
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
jobs:
#  UnitTests:
#    runs-on: [ubuntu-latest]
#    strategy:
#      fail-fast: false
#      matrix:
#        testMode:
#          - playmode
#          - editmode
#        UnityVersion:
#          - 2019.4.12f1
#    steps:
#    - uses: actions/checkout@v2.3.3
#      with:
#        lfs: true
#    - name: Cache
#      id: cache
#      uses: actions/cache@v2.1.2
#      with:
#        path: Library
#        key: Library
#    - uses: webbertakken/unity-test-runner@v1.7
#      id: tests
#      with:
#        unityVersion: ${{ matrix.UnityVersion }}
#        testMode: ${{ matrix.testMode }}
#        artifactsPath: ${{ matrix.testMode }}-artifacts
#    - uses: actions/upload-artifact@v2
#      with:
#        name: Test results for ${{ matrix.testMode }}
#        path: ${{ steps.tests.outputs.artifactsPath }}
#    - name: Generate new cache
#      if: steps.cache.outputs.cache-hit != 'true'
#      uses: actions/cache@v1.1.2
#      with:
#        path: Library
#        key: Library
  Build:
#    needs: [UnitTests]
    runs-on: [ubuntu-latest]
    strategy:
      fail-fast: false
      matrix:
        UnityVersion: 
          - 2019.4.12f1
    steps:
    - uses: actions/checkout@v2.3.3
      with:
        lfs: true
    - name: Cache
      id: cache
      uses: actions/cache@v1.1.2
      with:
        path: Library
        key: Library  
    - name: Unity - Builder
      uses: webbertakken/unity-builder@main
      with:
        working-directory: Action-test
        unityVersion: ${{ matrix.UnityVersion }}
        targetPlatform: StandaloneWindows64
        buildMethod: Editor.Build.Perform
    - uses: actions/upload-artifact@v2
      with:
        name: Build
        path: build
